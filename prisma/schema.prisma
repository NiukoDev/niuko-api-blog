generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  password    String
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  posts       Post[]
  comments    Comment[]
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  posts       PostCategory[]
}

model Post {
  id          String    @id @default(cuid())
  title       String
  content     String
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  image       String?
  infographic String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  comments    Comment[]
  categories  PostCategory[]
}

enum Role {
  USER
  ADMIN
}

model Comment {
  id          String    @id @default(cuid())
  content     String
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      String
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model PostCategory {
  postId     String
  categoryId String
  post       Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
}
